server.port=9000
spring.application.name=ms-store1-orders
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.healthcheck.enabled=true
eureka.instance.instanceId=${spring.application.name}:${random.int}
eureka.instance.lease-renewal-interval-in-seconds=1
eureka.instance.lease-expiration-duration-in-seconds=3
ribbon.eureka.enabled=true
ribbon.ServerListRefreshInterval=5000
ms-store1-rates.ribbon.NIWSServerListClassName=com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
ms-store1-rates.ribbon.DeploymentContextBasedVipAddresses=ms-store1-rates
ms-user.ribbon.NIWSServerListClassName=com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
ms-user.ribbon.DeploymentContextBasedVipAddresses=ms-user
services.rate-service.url=http://ms-store1-rates
services.rate-service.name=ms-store1-rates
services.user-service.url=http://ms-user
services.user-service.name=ms-user
logging.level.org.springframework.web=DEBUG

#ribbon.NIWSServerListClassName=com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList 
# the server must register itself with Eureka server with VipAddress "myservice"
#ribbon.DeploymentContextBasedVipAddresses=ms-store1-orders
